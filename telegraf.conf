# Telegraf Configuration

# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply prepend
# them with $. For strings the variable must be within quotes (ie, "$STR_VAR"),
# for numbers and booleans they should be plain (ie, $INT_VAR, $BOOL_VAR)


###############################################################################
#                                  GLOBAL                                     #
###############################################################################

# Global tags can be specified here in key="value" format.
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"
  ## Environment variables can be used as tags, and throughout the config file
  # user = "$USER"


# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "60s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf will send metrics to outputs in batches of at most
  ## metric_batch_size metrics.
  ## This controls the size of writes that Telegraf sends to output plugins.
  metric_batch_size = 1000

  ## For failed writes, telegraf will cache metric_buffer_limit metrics for each
  ## output, and will flush this buffer on a successful write. Oldest metrics
  ## are dropped first when this buffer fills.
  ## This buffer only fills when writes fail to output plugin(s).
  metric_buffer_limit = 10000

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "0s"

  ## Default flushing interval for all outputs. Maximum flush_interval will be
  ## flush_interval + flush_jitter
  flush_interval = "10s"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "0s"

  ## By default or when set to "0s", precision will be set to the same
  ## timestamp order as the collection interval, with the maximum being 1s.
  ##   ie, when interval = "10s", precision will be "1s"
  ##       when interval = "250ms", precision will be "1ms"
  ## Precision will NOT be used for service inputs. It is up to each individual
  ## service input to set the timestamp at the appropriate precision.
  ## Valid time units are "ns", "us" (or "Âµs"), "ms", "s".
  precision = ""

  ## Logging configuration:
  ## Run telegraf with debug log messages.
  debug = false
  ## Run telegraf in quiet mode (error log messages only).
  quiet = false
  ## Specify the log file name. The empty string means to log to stderr.
  logfile = ""

  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

############
# InfluxDB #
############
[[outputs.influxdb_v2]]
  ## The URLs of the InfluxDB cluster nodes.
  ##
  ## Multiple URLs can be specified for a single cluster, only ONE of the
  ## urls will be written to each interval.
  urls = ["http://influxdb:8086"]

  ## Token for authentication.
  token = "influxdb"

  ## Organization is the name of the organization you wish to write to; must exist.
  organization = "RadioFan.Club"

  ## Destination bucket to write into.
  bucket = "db_map"


########
# MQTT #
########
[[outputs.mqtt]]
  # MQTT Brokers
  servers = ["172.28.0.41:1883"]

  # MQTT Topic for Producer Messages
  # <topic_prefix>/<hostname>/<pluginname>/ (e.g. prefix/web01.example.com/mem)
  topic_prefix = "telegraf"

  # MQTT QoS policy for sending messages
  # REF: https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_9.0.0/com.ibm.mq.dev.doc/q029090_.htm
  # 0 = at most once
  # 1 = at least once
  # 2 = exactly once
  qos = 2

  # MQTT Session Keep Alive
  keep_alive = 90

  # username and password to connect MQTT server
  #username = "telegraf"
  #password = "metricsmetricsmetricsmetrics"

  # The unique client id to connect MQTT server or random generated if not set
  client_id = "telegraf"

  # Timeout for write operations. default: 5s
  timeout = "20s"

  # Optional TLS Config
  #tls_ca = "/etc/telegraf/ca.pem"
  #tls_cert = "/etc/telegraf/cert.pem"
  #tls_key = "/etc/telegraf/key.pem"

  # Use TLS but skip chain & host verification
  #insecure_skip_verify = false

  # MQTT data sent in one big batch message or one message per item
  batch = true

  # MQTT RETAIN flag, making broker cache entries until someone actually reads it
  retain = false

  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_OUTPUT.md
  #data_format = "influx"
  data_format = "json"


###############################################################################
#                            PROCESSOR PLUGINS                                #
###############################################################################


###############################################################################
#                            AGGREGATOR PLUGINS                               #
###############################################################################


###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

##############
# Solar Data #
##############
[[inputs.http]]
  # REF: https://docs.influxdata.com/telegraf/v1.21/guides/using_http/
    
  urls = [
    "https://dxheat.com/wwv/source/"
  ]

  # https://github.com/influxdata/telegraf/tree/master/plugins/parsers/json
  # Specify all fields that are stings:
  json_string_fields = ["station",
                        "time",
                        "aurora"]

  # Exclude url and host items from tags
  tagexclude = ["url", "host"]

  # Setting the InfluxDB _time is automatically set based when Telegraf polled for Solar Data.
  # In this specific case, no actual field was used from the Solar Data HTTP respone.
  # We deliberated want one (1) minute "as polled" resolution from the Telegraf polling interval.
  # REF: https://github.com/influxdata/telegraf/tree/master/plugins/parsers/json

  # Overwrite measurement name from default `http`
  name_override = "telegraf_solar_data"

  # Amount of time allowed to complete the HTTP request
  timeout = "30s"

  # https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "json"


##################
# POTA SPOT Data #
##################
[[inputs.http]]
  # REF: https://docs.influxdata.com/telegraf/v1.21/guides/using_http/

  urls = [
    "https://api.pota.app/spot/activator"
  ]

  # https://github.com/influxdata/telegraf/tree/master/plugins/parsers/json
  # Specify all fields that are stings:
  json_string_fields = ["activator",
                        "frequency",
                        "mode",
                        "reference",
                        "parkName",
                        "spotTime",
                        "spotter",
                        "comments",
                        "source",
                        "invalid",
                        "name",
                        "locationDesc",
                        "grid4",
                        "grid6"]

  # Exclude url and host items from tags
  tagexclude = ["url", "host"]

  # Set the InfluxDB _time based on POTA spotTime
  # REF: https://github.com/influxdata/telegraf/tree/master/plugins/parsers/json
  json_time_key = "spotTime"
  json_time_format = "2006-01-02T15:04:05"
  json_timezone = "UTC"

  # Overwrite measurement name from default `http`
  name_override = "telegraf_pota_data"

  # Amount of time allowed to complete the HTTP request
  timeout = "30s"

  # https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "json"


##################
# SOTA SPOT Data #
##################
[[inputs.http]]
  # REF: https://docs.influxdata.com/telegraf/v1.21/guides/using_http/

  urls = [
    "https://api2.sota.org.uk/api/spots/50/all%7Call?client=sotawatch&user=anon"
  ]

  # https://github.com/influxdata/telegraf/tree/master/plugins/parsers/json
  # REF: https://github.com/influxdata/telegraf/tree/master/plugins/parsers/json
  json_string_fields = ["timeStamp",
                        "comments",
                        "callsign",
                        "associationCode",
                        "summitCode",
                        "activatorCallsign",
                        "activatorName",
                        "frequency",
                        "mode",
                        "summitDetails",
                        "highlightColor"]

  # Exclude url and host items from tags
  tagexclude = ["url", "host"]

  # Set the InfluxDB _time based on SOTA timeStamp
  # REF: https://github.com/influxdata/telegraf/tree/master/plugins/parsers/json
  json_time_key = "timeStamp"
  json_time_format = "2006-01-02T15:04:05"
  json_timezone = "UTC"

  # Overwrite measurement name from default `http`
  name_override = "telegraf_sota_data"

  # Amount of time allowed to complete the HTTP request
  timeout = "30s"

  # https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "json"


##################
# IOTA SPOT Data #
##################
[[inputs.http]]
  # REF: https://docs.influxdata.com/telegraf/v1.21/guides/using_http/

  urls = [
    "https://www.iota-world.org/iotamaps/index_tools.php?what=getclusterdata&rows=50&bnds=all&md=all&startup=true&uuid=0&dummy=1645876945237&_=1645876943394https://www.iota-world.org/iotamaps/index_tools.php?what=getclusterdata&rows=50&bnds=all&md=all&startup=true&uuid=0"
  ]

  # Optional HTTP headers
  headers = {"x-requested-with" = "XMLHttpRequest"}

  # https://github.com/influxdata/telegraf/tree/master/plugins/parsers/json
  # Specify all fields that are stings:
  json_string_fields = ["dxSpotter",
                        "frequency",
                        "dxCall",
                        "comment",
                        "spotDate",
                        "spotTime",
                        "spotTStamp",
                        "dxccName",
                        "grpRef",
                        "groupName",
                        "islPositions",
                        "periodFrom",
                        "periodTo",
                        "cqZone",
                        "ituZone",
                        "countryCode",
                        "operators"]

  # Exclude url and host items from tags
  tagexclude = ["url", "host"]

  # Set the InfluxDB _time based on IOTA spotTStamp
  # REF: https://github.com/influxdata/telegraf/tree/master/plugins/parsers/json
  json_time_key = "spotTStamp"
  json_time_format = "unix_ms"
  json_timezone = "UTC"

  # Overwrite measurement name from default `http`
  name_override = "telegraf_iota_data"

  # Amount of time allowed to complete the HTTP request
  timeout = "30s"

  # https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "json"
